1.运行环境：centos6.4 + mysql5.1 + python 2.6 + django1.5 + apache2.2
2.主要功能模块：
(1).话题发布。
(2).查看话题列表。
(3).查看话题下的所有帖子 。
(4).话题回复，支持帖子引用。
(5).每个话题有浏览次数(pv)、访客数(uv)、回复次数、发帖时间、最后发帖时间这几个信息。
(6).每个帖子需要包含发帖人，用户使用浏览器，发帖时间这几个信息。
(7).在页面底部需要显示当前在线人数(5分钟内)，以及页面的加载时间。
(8).发帖不需要注册和登陆，但需要填写用户名。

3.涉及到的技能要点：
(1).基本环境搭建。
(2).全局变量配置：settings.py。
(3).url配置：urls.py。
(4).模型：数据库模型models.py，字段类型，默认值，空值，外键等。
(5).后期的数据库结构的调整：mysql操作，alter table。
(6).视图：views.py 模板渲染。数据操作等。
(7).表单的提交与参数获取：
(8).中间件处理。
(9).分页。
(10).用户参数获取：ip，浏览器类型等。
(11).流量统计。
(12).缓存的研究：自带缓存系统与第三方缓存redis-cache,memcached等。
(13).cookies与session的处理与获取。
(14).django自定义模板过滤器。（替换回复引用的样式）。这个自定义模板过滤器的功能不错，以后在模板中有用的不爽的地方就过来实现一下。
(15).Html的页面输出：转义与非转义。
(16).一些算法问题：论坛回复功能的算法研究。
(17).python的一些常用操作：列表（反转、切片、删除、添加等）、字典、字符串等。
(18).正则表达式的研究和使用。和其他语言（js/php/perl等）对比，注意点：python不支持动态正则表达式。在这方面的研究花了一下时间。虽然python不支持动态正则表达式，但是可以写个算法实现一下。我有个可能的坏习惯，遇到难题，会来劲，不断深入钻研，比如这个动态正则的问题，本来是为了取回复中的配套标签，开始是仿着动态正则嵌套标签提取的思路写正则表达式，结果无效，因为不支持。后来就自己写python的动态正则实现（堆栈和计数器）。后来一想，有更简单的方法，直接替换得了，只要控制用户提交的tag。花了不少时间，不过也学到了和更熟悉了正则方面的一些新东西。
(19).关于回复引用的功能：这方面采取的方法还是比较简单的。目前使用了直接替换的方式。主要是考虑到个人时间安排，暂时没有太多时间花在这个小测试项目上。后期再逐步完善。如要在生产环境使用，还需要进行完善的。参考上一条。
(20).其他涉及到的方面：django对sql的原生操作、django与数据库的长连接，django模板渲染时间测试等，第三方缓存系统。